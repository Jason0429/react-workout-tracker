{"version":3,"sources":["components/Navbar.js","styled/index.js","components/Login.js","screens/CalendarScreen.js","App.js","reducers/logged.js","reducers/index.js","index.js"],"names":["Navbar","Nav","styled","div","CircularShadowEffect","Screen","RowCenter","Login","CalendarScreen","useState","Date","value","onChange","style","display","flexDirection","Typography","variant","mt","ml","App","Main","loggedReducer","state","action","type","allReducers","combineReducers","logged","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"mRA+CeA,I,IAAAA,EAxCf,WAIC,IAAMC,EAAMC,IAAOC,IAAV,kSAcHC,EAAuBF,IAAOC,IAAV,4OAW1B,OACC,eAACF,EAAD,WACC,cAAC,IAAD,IACA,cAACG,EAAD,UACC,cAAC,IAAD,MAED,cAAC,IAAD,QCxCUC,EAASH,IAAOC,IAAV,0GAMNG,EAAYJ,IAAOC,IAAV,kH,OCmBPI,I,iCCAAC,I,EAAAA,EApBf,WACC,MAA0BC,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACC,eAACP,EAAD,CACCQ,MAAO,CACNC,QAAS,OACTC,cAAe,UAHjB,UAMC,cAACT,EAAD,UACC,cAAC,IAAD,CAAUM,SAAUA,EAAUD,MAAOA,MAEtC,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,GAAI,EAAGC,GAAI,EAApC,uCCiCYC,MA/Bf,WACC,IAEMC,EAAOnB,IAAOC,IAAV,gJAQV,OACC,mCAEE,qCACC,cAACkB,EAAD,UAEC,cAAC,EAAD,MAED,cAAC,EAAD,U,gBC9BUC,EAXO,WAA4B,IAA3BC,EAA0B,wDAAXC,EAAW,uCAChD,OAAQA,EAAOC,MACd,IAAK,UACJ,OAAO,EACR,IAAK,WACJ,OAAO,EACR,QACC,OAAOF,ICAKG,EAJKC,YAAgB,CACnCC,OAAQN,ICKHO,EAAQC,YACbJ,EACAK,OAAOC,8BAAgCD,OAAOC,gCAS/CC,IAASC,OACR,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACC,cAAC,EAAD,MAEDM,SAASC,eAAe,W","file":"static/js/main.cc684ee9.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport FitnessCenterIcon from \"@mui/icons-material/FitnessCenter\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport AddIcon from \"@mui/icons-material/Add\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { signInWithGoogle, signOutOfGoogle } from \"../actions\";\n\nfunction Navbar() {\n\t// const logged = useSelector((state) => state.logged);\n\t// const dispatch = useDispatch();\n\n\tconst Nav = styled.div`\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\theight: 50px;\n\t\twidth: 100%;\n\t\tbackground: #fefefe;\n\t\tpadding: 0 10px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t\talign-items: center;\n\t\tbox-shadow: 0 0 15px 3px #00000020;\n\t`;\n\n\tconst CircularShadowEffect = styled.div`\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\theight: 30px;\n\t\twidth: 30px;\n\t\tbox-shadow: 0 0 15px 3px #00000020;\n\t\tborder-radius: 100%;\n\t\tbackground: #fefefe;\n\t`;\n\n\treturn (\n\t\t<Nav>\n\t\t\t<CalendarTodayIcon />\n\t\t\t<CircularShadowEffect>\n\t\t\t\t<AddIcon />\n\t\t\t</CircularShadowEffect>\n\t\t\t<FitnessCenterIcon />\n\t\t</Nav>\n\t);\n}\n\nexport default Navbar;\n","import styled from \"styled-components\";\n\nexport const Screen = styled.div`\n\theight: calc(100vh - 200px);\n\twidth: 428px;\n\tborder: thin solid black;\n`;\n\nexport const RowCenter = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n","import styled from \"styled-components\";\nimport { Screen } from \"../styled\";\nimport { Button } from \"@material-ui/core\";\n\nfunction Login() {\n\treturn (\n\t\t<Screen\n\t\t\tstyle={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tjustifyContent: \"center\"\n\t\t\t}}\n\t\t>\n\t\t\t<Button\n\t\t\t\tvariant='contained'\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: \"rgb(144, 202, 249)\",\n\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\tfontWeight: \"500\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tSign In With Google\n\t\t\t</Button>\n\t\t</Screen>\n\t);\n}\n\nexport default Login;\n","import { useState } from \"react\";\nimport { Screen, RowCenter } from \"../styled\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { Typography } from \"@mui/material\";\nimport { Translate } from \"@material-ui/icons\";\n\nfunction CalendarScreen() {\n\tconst [value, onChange] = useState(new Date());\n\n\treturn (\n\t\t<Screen\n\t\t\tstyle={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\"\n\t\t\t}}\n\t\t>\n\t\t\t<RowCenter>\n\t\t\t\t<Calendar onChange={onChange} value={value} />\n\t\t\t</RowCenter>\n\t\t\t<Typography variant='h6' mt={2} ml={2}>\n\t\t\t\tWorkouts on this Day:\n\t\t\t</Typography>\n\t\t</Screen>\n\t);\n}\n\nexport default CalendarScreen;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport CalendarScreen from \"./screens/CalendarScreen\";\n\n/*\nAdd button (bottom right)\n    - Add workout for current month/day/year\n\nList of Workout Templates\n    - Exercise\n    - Weight\n    - Reps (repeated # rows (sets))\n\nCalendar \n    - linked to database based on month/day/year\n\nSearch for specific date\n    - View workout(s) on that date\n*/\n\nfunction App() {\n\tconst user = null;\n\n\tconst Main = styled.div`\n\t\twidth: 100%;\n\t\theight: 100vh;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t`;\n\n\treturn (\n\t\t<>\n\t\t\t{!user ? (\n\t\t\t\t<>\n\t\t\t\t\t<Main>\n\t\t\t\t\t\t{/* <Login /> */}\n\t\t\t\t\t\t<CalendarScreen />\n\t\t\t\t\t</Main>\n\t\t\t\t\t<Navbar />\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Main>Hello</Main>\n\t\t\t\t\t<Navbar />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default App;\n","const loggedReducer = (state = false, action) => {\n\tswitch (action.type) {\n\t\tcase \"SIGN_IN\":\n\t\t\treturn true;\n\t\tcase \"SIGN_OUT\":\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default loggedReducer;\n","import loggedReducer from \"./logged\";\nimport { combineReducers } from \"redux\";\n\nconst allReducers = combineReducers({\n\tlogged: loggedReducer\n});\n\nexport default allReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./reducers\";\n\n// STORE -> GLOBALIZED STORE\nconst store = createStore(\n\tallReducers,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// ACTION\n\n// REDUCERS\n\n// DISPATCH\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}