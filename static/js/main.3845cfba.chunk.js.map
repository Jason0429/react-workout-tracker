{"version":3,"sources":["components/Navbar.js","styled/index.js","screens/LoginScreen.js","components/WorkoutRow.js","screens/CalendarScreen.js","screens/AddScreen.js","screens/TemplateScreen.js","App.js","reducers/logged.js","reducers/index.js","index.js"],"names":["Navbar","Nav","styled","div","nonActiveStyle","textDecoration","color","display","alignItems","justifyContent","height","width","borderRadius","activeStyle","boxShadow","iconStyle","to","style","isActive","Screen","LoginScreen","Button","variant","background","fontWeight","WorkoutRow","Row","Typography","ml","CalendarScreen","useState","Date","value","setValue","LocalizationProvider","dateAdapter","AdapterDateFns","StaticDatePicker","displayStaticWrapperAs","onChange","newValue","renderInput","params","TextField","mt","AddScreen","MyScreen","Stack","spacing","MobileDatePicker","label","inputFormat","TemplateScreen","App","user","Main","exact","path","element","loggedReducer","state","action","type","allReducers","combineReducers","logged","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3845cfba.chunk.js","sourcesContent":["import styled, { makeStyl } from \"styled-components\";\nimport FitnessCenterIcon from \"@mui/icons-material/FitnessCenter\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { NavLink } from \"react-router-dom\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { signInWithGoogle, signOutOfGoogle } from \"../actions\";\n\nfunction Navbar() {\n\t// const logged = useSelector((state) => state.logged);\n\t// const dispatch = useDispatch();\n\n\tconst Nav = styled.div`\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\theight: 50px;\n\t\twidth: 100%;\n\t\tbackground: #fefefe;\n\t\tpadding: 0 10px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t\talign-items: center;\n\t\tbox-shadow: 0 0 15px 3px #00000020;\n\t`;\n\n\tconst nonActiveStyle = {\n\t\ttextDecoration: \"none\",\n\t\tcolor: \"inherit\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\theight: \"40px\",\n\t\twidth: \"40px\",\n\t\tborderRadius: \"100%\"\n\t};\n\n\tconst activeStyle = {\n\t\ttextDecoration: \"none\",\n\t\tcolor: \"inherit\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\theight: \"40px\",\n\t\twidth: \"40px\",\n\t\tborderRadius: \"100%\",\n\t\tboxShadow: \"0 0 15px 3px #00000020\"\n\t};\n\n\tconst iconStyle = {\n\t\theight: \"20px\",\n\t\twidth: \"20px\"\n\t};\n\n\treturn (\n\t\t<Nav>\n\t\t\t<NavLink\n\t\t\t\tto='/calendar'\n\t\t\t\tstyle={({ isActive }) =>\n\t\t\t\t\tisActive ? activeStyle : nonActiveStyle\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<CalendarTodayIcon style={iconStyle} />\n\t\t\t</NavLink>\n\t\t\t<NavLink\n\t\t\t\tto='/add'\n\t\t\t\tstyle={({ isActive }) =>\n\t\t\t\t\tisActive ? activeStyle : nonActiveStyle\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<AddIcon style={iconStyle} />\n\t\t\t</NavLink>\n\t\t\t<NavLink\n\t\t\t\tto='/template'\n\t\t\t\tstyle={({ isActive }) =>\n\t\t\t\t\tisActive ? activeStyle : nonActiveStyle\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<FitnessCenterIcon style={iconStyle} />\n\t\t\t</NavLink>\n\t\t</Nav>\n\t);\n}\n\nexport default Navbar;\n","import styled from \"styled-components\";\n\nexport const Screen = styled.div`\n\theight: calc(100vh - 200px);\n\twidth: 428px;\n\tborder: thin solid black;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport const RowCenter = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n","import styled from \"styled-components\";\nimport { Screen } from \"../styled\";\nimport { Button } from \"@material-ui/core\";\n\nfunction LoginScreen() {\n\treturn (\n\t\t<Screen\n\t\t\tstyle={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tjustifyContent: \"center\"\n\t\t\t}}\n\t\t>\n\t\t\t<Button\n\t\t\t\tvariant='contained'\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: \"rgb(144, 202, 249)\",\n\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\tfontWeight: \"500\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tSign In With Google\n\t\t\t</Button>\n\t\t</Screen>\n\t);\n}\n\nexport default LoginScreen;\n","import styled from \"styled-components\";\nimport { Typography } from \"@mui/material\";\n\nfunction WorkoutRow() {\n\tconst Row = styled.div`\n\t\twidth: 100%;\n\t\theight: 50px;\n\t\tbackground: #fefefe;\n\t\tborder-top: thin solid black;\n\t\tborder-bottom: thin solid black;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t`;\n\n\treturn (\n\t\t<Row>\n\t\t\t<Typography variant='h7' ml={2}>\n\t\t\t\tWorkout Title\n\t\t\t</Typography>\n\t\t</Row>\n\t);\n}\n\nexport default WorkoutRow;\n","import { useState } from \"react\";\nimport { Screen, RowCenter } from \"../styled\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { Typography } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport StaticDatePicker from \"@mui/lab/StaticDatePicker\";\nimport WorkoutRow from \"../components/WorkoutRow\";\n\nfunction CalendarScreen() {\n\tconst [value, setValue] = useState(new Date());\n\n\treturn (\n\t\t<Screen>\n\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns}>\n\t\t\t\t<StaticDatePicker\n\t\t\t\t\tdisplayStaticWrapperAs='mobile'\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\tsetValue(newValue);\n\t\t\t\t\t}}\n\t\t\t\t\trenderInput={(params) => <TextField {...params} />}\n\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t/>\n\t\t\t</LocalizationProvider>\n\t\t\t<Typography\n\t\t\t\tvariant='h6'\n\t\t\t\tmt={2}\n\t\t\t\tml={2}\n\t\t\t\tstyle={{ fontWeight: \"bold\" }}\n\t\t\t>\n\t\t\t\tWorkouts on this Day:\n\t\t\t</Typography>\n\t\t\t<WorkoutRow />\n\t\t</Screen>\n\t);\n}\n\nexport default CalendarScreen;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TextField from \"@mui/material/TextField\";\nimport MobileDatePicker from \"@mui/lab/MobileDatePicker\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport { Screen } from \"../styled\";\n\nfunction AddScreen() {\n\tconst [value, setValue] = useState(new Date());\n\n\tconst MyScreen = styled(Screen)`\n\t\talign-items: center;\n\t\tpadding: 20px;\n\t\toverflow-y: scroll;\n\t`;\n\n\treturn (\n\t\t<MyScreen>\n\t\t\t<Stack spacing={3}>\n\t\t\t\t<LocalizationProvider dateAdapter={AdapterDateFns}>\n\t\t\t\t\t<MobileDatePicker\n\t\t\t\t\t\tlabel='Workout Date'\n\t\t\t\t\t\tinputFormat='MM/dd/yyyy'\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={(newValue) => setValue(newValue)}\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} />}\n\t\t\t\t\t/>\n\t\t\t\t</LocalizationProvider>\n\t\t\t\t<TextField label='Workout Name' variant='filled' />\n\t\t\t\t<Button variant='contained' color='primary'>\n\t\t\t\t\tAdd Workout\n\t\t\t\t</Button>\n\t\t\t</Stack>\n\t\t</MyScreen>\n\t);\n}\n\nexport default AddScreen;\n","import { Screen } from \"../styled\";\n\nfunction TemplateScreen() {\n\treturn <Screen>Template Screen</Screen>;\n}\n\nexport default TemplateScreen;\n","import { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Navbar from \"./components/Navbar\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport CalendarScreen from \"./screens/CalendarScreen\";\nimport AddScreen from \"./screens/AddScreen\";\nimport TemplateScreen from \"./screens/TemplateScreen\";\n\n/*\nAdd button (bottom right)\n    - Add workout for current month/day/year\n\nList of Workout Templates\n    - Exercise\n    - Weight\n    - Reps (repeated # rows (sets))\n\nCalendar \n    - linked to database based on month/day/year\n\nSearch for specific date\n    - View workout(s) on that date\n*/\n\nfunction App() {\n\tconst [user, setUser] = useState(1);\n\n\tconst Main = styled.div`\n\t\twidth: 100%;\n\t\theight: 100vh;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t`;\n\n\treturn (\n\t\t<Router>\n\t\t\t<Main>\n\t\t\t\t{user ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/calendar'\n\t\t\t\t\t\t\t\telement={<CalendarScreen />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route exact path='/add' element={<AddScreen />} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/template'\n\t\t\t\t\t\t\t\telement={<TemplateScreen />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path='*' element={<LoginScreen />} />\n\t\t\t\t\t\t</Routes>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<LoginScreen />\n\t\t\t\t)}\n\t\t\t</Main>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const loggedReducer = (state = false, action) => {\n\tswitch (action.type) {\n\t\tcase \"SIGN_IN\":\n\t\t\treturn true;\n\t\tcase \"SIGN_OUT\":\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default loggedReducer;\n","import loggedReducer from \"./logged\";\nimport { combineReducers } from \"redux\";\n\nconst allReducers = combineReducers({\n\tlogged: loggedReducer\n});\n\nexport default allReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./reducers\";\n\n// STORE -> GLOBALIZED STORE\nconst store = createStore(\n\tallReducers,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// ACTION\n\n// REDUCERS\n\n// DISPATCH\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}